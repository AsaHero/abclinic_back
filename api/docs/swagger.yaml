definitions:
  models.Article:
    properties:
      guid:
        type: string
      img:
        type: string
      side:
        type: string
      text:
        type: string
    type: object
  models.Authors:
    properties:
      guid:
        type: string
      img:
        items:
          type: integer
        type: array
      name:
        type: string
    type: object
  models.Categories:
    properties:
      description:
        type: string
      guid:
        type: string
      img:
        type: string
      title:
        type: string
    type: object
  models.Chapter:
    properties:
      guid:
        type: string
      name:
        type: string
    type: object
  models.Contents:
    properties:
      url:
        type: string
    type: object
  models.CreateArticleRequest:
    properties:
      chapter_id:
        type: string
      img:
        type: string
      side:
        type: string
      text:
        type: string
    type: object
  models.CreateCategoryRequest:
    properties:
      description:
        type: string
      img:
        type: string
      title:
        type: string
    type: object
  models.CreateChapterRequest:
    properties:
      name:
        type: string
    type: object
  models.CreatePublicationRequest:
    properties:
      author_id:
        type: string
      img:
        items:
          $ref: '#/definitions/models.Contents'
        type: array
      text:
        type: string
      title:
        type: string
      type:
        type: string
      video:
        type: string
    type: object
  models.CreateServiceGroupRequest:
    properties:
      name:
        type: string
    type: object
  models.CreateServiceRequest:
    properties:
      group_id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.Empty:
    type: object
  models.GUIDResponse:
    properties:
      guid:
        type: string
    type: object
  models.GetDentistsListResponse:
    properties:
      clone_name:
        type: string
      id:
        type: integer
      img:
        type: string
      info:
        type: string
      language:
        type: string
      name:
        type: string
      priority:
        type: integer
      side:
        type: string
    type: object
  models.Publications:
    properties:
      author:
        $ref: '#/definitions/models.Authors'
      category_id:
        type: string
      guid:
        type: string
      img:
        items:
          $ref: '#/definitions/models.Contents'
        type: array
      text:
        type: string
      title:
        type: string
      type:
        type: string
      video:
        type: string
    type: object
  models.ResponseError:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  models.Services:
    properties:
      guid:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.ServicesGroup:
    properties:
      guid:
        type: string
      name:
        type: string
    type: object
  models.UpdateArticleRequest:
    properties:
      img:
        type: string
      side:
        type: string
      text:
        type: string
    type: object
  models.UpdateDentistRequest:
    properties:
      img:
        type: string
      info:
        type: string
      name:
        type: string
    type: object
  models.UpdatePublicationRequest:
    properties:
      img:
        items:
          $ref: '#/definitions/models.Contents'
        type: array
      text:
        type: string
      title:
        type: string
      type:
        type: string
      video:
        type: string
    type: object
  models.UpdateServiceRequest:
    properties:
      name:
        type: string
      price:
        type: number
    type: object
info:
  contact: {}
paths:
  /v1/articles:
    post:
      consumes:
      - application/json
      description: Create new article
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GUIDResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create new article
      tags:
      - Info
  /v1/articles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete article by guid
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete article
      tags:
      - Info
    get:
      consumes:
      - application/json
      description: Get articles by chapter id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Article'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get articles
      tags:
      - Info
    put:
      consumes:
      - application/json
      description: Update article
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update article
      tags:
      - Info
  /v1/articles/chapter:
    get:
      consumes:
      - application/json
      description: Get article chapters
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Chapter'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get article chapters
      tags:
      - Info
    post:
      consumes:
      - application/json
      description: Create new article chapter
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateChapterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GUIDResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create new article chapter
      tags:
      - Info
  /v1/articles/chapter/{id}:
    delete:
      consumes:
      - application/json
      description: Delete article chapter
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete article cahpter
      tags:
      - Info
    get:
      consumes:
      - application/json
      description: Get article chapter
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ServicesGroup'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get article chapter
      tags:
      - Info
    put:
      consumes:
      - application/json
      description: Update articles chapter
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateChapterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update article chapter
      tags:
      - Info
  /v1/authors:
    get:
      consumes:
      - application/json
      description: Get authors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Authors'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get authors
      tags:
      - Author
    post:
      consumes:
      - application/json
      description: Create new author
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GUIDResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create new author
      tags:
      - Author
  /v1/authors/{id}:
    delete:
      consumes:
      - application/json
      description: Delete author
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete author
      tags:
      - Author
    put:
      consumes:
      - application/json
      description: Update author
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update author
      tags:
      - Author
  /v1/blogs:
    get:
      consumes:
      - application/json
      description: Get publication categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Categories'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get publication categories
      tags:
      - Blogs
    post:
      consumes:
      - application/json
      description: Create new publication category
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GUIDResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create new publication category
      tags:
      - Blogs
  /v1/blogs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete publication category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete publication category
      tags:
      - Blogs
    put:
      consumes:
      - application/json
      description: Update publication category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update publication category
      tags:
      - Blogs
  /v1/blogs/{id}/publication:
    get:
      consumes:
      - application/json
      description: Get publications by category id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Publications'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get publications
      tags:
      - Blogs
    post:
      consumes:
      - application/json
      description: Create new publication
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreatePublicationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GUIDResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create new publication
      tags:
      - Blogs
  /v1/blogs/publication/{id}:
    delete:
      consumes:
      - application/json
      description: Delete publication by guid
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete publication
      tags:
      - Blogs
    put:
      consumes:
      - application/json
      description: Update publication
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePublicationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update publication
      tags:
      - Blogs
  /v1/dentists:
    get:
      consumes:
      - application/json
      description: List of dentists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GetDentistsListResponse'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get dentist list
      tags:
      - dentists
  /v1/dentists/{id}:
    get:
      consumes:
      - application/json
      description: Get one dentist by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetDentistsListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get one dentist
      tags:
      - dentists
    put:
      consumes:
      - application/json
      description: Update dentists data by ID
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDentistRequest'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update dentist data
      tags:
      - dentists
  /v1/services:
    post:
      consumes:
      - application/json
      description: Create new service
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateServiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GUIDResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create new service
      tags:
      - Price list
  /v1/services/{group_id}:
    get:
      consumes:
      - application/json
      description: Get servivies by group id
      parameters:
      - description: group_id
        in: path
        name: group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Services'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get services
      tags:
      - Price list
  /v1/services/{id}:
    delete:
      consumes:
      - application/json
      description: Delete servivies by guid
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete services
      tags:
      - Price list
    put:
      consumes:
      - application/json
      description: Update service
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateServiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update service
      tags:
      - Price list
  /v1/services/groups:
    get:
      consumes:
      - application/json
      description: Get servivies groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ServicesGroup'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get services groups
      tags:
      - Price list
    post:
      consumes:
      - application/json
      description: Create new service group
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateServiceGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GUIDResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create new service group
      tags:
      - Price list
  /v1/services/groups/{id}:
    delete:
      consumes:
      - application/json
      description: Delete servivies group
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete services group
      tags:
      - Price list
    get:
      consumes:
      - application/json
      description: Get servivies group
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ServicesGroup'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get services group
      tags:
      - Price list
    put:
      consumes:
      - application/json
      description: Update service group
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateServiceGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update service group
      tags:
      - Price list
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
